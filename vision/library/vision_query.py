# ################################################################################################
# ---------------------------------------------------------------------------------------
# File:   vision_query.py
# Author: Luis Monteiro
#
# Created on nov 8, 2019, 22:00 PM
# ---------------------------------------------------------------------------------------
# ################################################################################################
#
# imports
from time  import time, sleep
#
# ---------------------------------------------------------------------------------------
# VisionQuery 
# ---------------------------------------------------------------------------------------
#
class VisionQuery:
    # -------------------------------------------------------------------------
    # initialization
    # -------------------------------------------------------------------------
    def __init__(self, db):
        self.__database = db

    # -------------------------------------------------------------------------
    # process
    # -------------------------------------------------------------------------
    def process(self, collection, interval, find):
        beg = float(time()) + int(interval[0]) if interval[0] else 0.0
        end = float(time()) + int(interval[1]) if interval[1] else 0.0
        # wait and validation 
        while  time() < end:
            for result in self.__database.find(collection, (beg, end)):
                found = find(result)
                if found:
                    return found
            sleep(1)
        # raise an exception  
        raise ValueError('results not found (%s)'%(collection))

# #################################################################################################
# ---------------------------------------------------------------------------------------
# End
# ---------------------------------------------------------------------------------------
# #################################################################################################