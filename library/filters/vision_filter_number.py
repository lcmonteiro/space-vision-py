# ################################################################################################
# ------------------------------------------------------------------------------------------------
# File:   vision_filter_numbers.py
# Author: Luis Monteiro
#
# Created on nov 8, 2019, 22:00 PM
# ------------------------------------------------------------------------------------------------
# ################################################################################################
#
# internal
from library.vision_filter import VisionFilter
from library.models        import VisionModelTextEAST
# external
import cv2 as cv
#
# ################################################################################################
# ------------------------------------------------------------------------------------------------
# VisionFilterNumbers 
# ------------------------------------------------------------------------------------------------
# ################################################################################################
class VisionFilterNumber(VisionFilter):
    #
    # -------------------------------------------------------------------------
    # initialization
    # -------------------------------------------------------------------------
    #
    def __init__(self, config):
        super().__init__(config)
        # load model for text detection
        self.__model = VisionModelTextEAST()
    #
    # -------------------------------------------------------------------------
    # process
    # -------------------------------------------------------------------------
    #
    def process(self, frame):
        # run process steps
        data = self.crop (frame)
        
        from cv2 import imshow
        imshow('crop', data)

        
        data = self.detect(data)
        return [
            VisionFilter.Result(
                '123', 0.9, VisionFilter.Region((0.2,0.3), (0.5, 0.5))
            )
        ]
        return self.select(data)
    #
    # -------------------------------------------------------------------------
    # steps
    # -------------------------------------------------------------------------
    #         
    def detect(self, data):
        from pprint import pprint
        pprint(self.__model.process(data))
        return data
# ################################################################################################
# ------------------------------------------------------------------------------------------------
# End
# ------------------------------------------------------------------------------------------------
# ################################################################################################
