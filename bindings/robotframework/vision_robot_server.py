###################################################################################################
# -------------------------------------------------------------------------------------------------
# File:   vision_robot_server.py
# Author: Luis Monteiro
#
# Created on nov 8, 2019, 22:00 PM
# -------------------------------------------------------------------------------------------------
###################################################################################################

####################################################################################################################
# -----------------------------------------------------------------------------
# imports
# -----------------------------------------------------------------------------
####################################################################################################################
from robotremoteserver import RobotRemoteServer
from re                import match                 
from dlt_ethernet      import Client as client_ethernet 
from dlt_serial        import Client as client_serial 
from dlt_api           import Api
from dlt_model_muniic  import MUNIIC_MODELS
from os                import _exit  as exit
import sys
from sys      import stdout
from logging  import DEBUG           as LEVEL

from time import sleep
####################################################################################################################
# -----------------------------------------------------------------------------
# Created Filters for clients
# -----------------------------------------------------------------------------
####################################################################################################################
# -------------------------------------------------------------------------------------------------
# ethernet
# -------------------------------------------------------------------------------------------------
def ethernet_filter(header, data):
    #print(header, data)
    # select muniic
    if not match(".*MUNI HMI- log info V 4.*", header):
        return None
    #print(header, data)
    # filter
    result = match("\w+::(\w+) ((\w\w )+)\d+ \d+", data)
    if result:
        return (result.group(1), result.group(2))
    return None
# -------------------------------------------------------------------------------------------------
# serial
# -------------------------------------------------------------------------------------------------
def serial_filter(data):
    result = match(".*HMIIF__vSendToDrivingMachine.*: (.*) : (.*)", data)
    if result: 
        return (result.group(1), result.group(2))
    return None
####################################################################################################################
# -----------------------------------------------------------------------------
# Create Callbacks
# -----------------------------------------------------------------------------
####################################################################################################################
# -------------------------------------------------------------------------------------------------
# default
# -------------------------------------------------------------------------------------------------
def api_default(key, data):
    # convert string to int list
    data = list(map(lambda x: int(x, 16), data.split()))
    # parse
    try :
        return { key : float(int.from_bytes(bytearray(data),   'big')) }
    except:
        return { key : data }
####################################################################################################################
# -----------------------------------------------------------------------------
# main
# -----------------------------------------------------------------------------
####################################################################################################################
def main(params):   
    try:
        # -----------------------------------------------------------------------------
        # register clients
        # -----------------------------------------------------------------------------
        c1 = client_ethernet(ip=str(params["dlt_ip"]), port=int(params["dlt_port"]))

        # c1 = client_ethernet(ip='192.168.1.113', port=int(args[2]))
        # c2 = client_ethernet(ip='127.0.0.1', port=3491)
        # c1 = client_serial(port='COM5')

        # -----------------------------------------------------------------------------
        # Set Client filters
        # -----------------------------------------------------------------------------
        c1.set_filter(ethernet_filter)
        #c3.set_filter(serial_filter)

        # -----------------------------------------------------------------------------
        # Initial API 
        # -----------------------------------------------------------------------------
        dlt = Api([c1])

        # -----------------------------------------------------------------------------
        # addmodels
        # -----------------------------------------------------------------------------
        # muniic models
        # -------------------------------------------------
        for key, function in MUNIIC_MODELS.items():
            dlt.set_function(key, function)

        # -------------------------------------------------
        # default model
        # -------------------------------------------------
        dlt.set_function_default(api_default)

        # -----------------------------------------------------------------------------
        # Start server
        # -----------------------------------------------------------------------------
        RobotRemoteServer(dlt, host=str(params["ip"]), port=int(params["port"]))

        return 0
    except KeyboardInterrupt as e:
        print(str(e))
        raise e 
 
####################################################################################################################
# -----------------------------------------------------------------------------
# run
# -----------------------------------------------------------------------------
####################################################################################################################  
from argparse import ArgumentParser
from logging  import basicConfig     as config_logger
from logging  import DEBUG           as LEVEL
from sys      import stdout
#
if __name__ == '__main__':
    parser = ArgumentParser()
    parser.add_argument('--dlt-ip',   type=str, default = "169.254.199.96")
    parser.add_argument('--dlt-port', type=int, default = 3490             )
    parser.add_argument('--ip',       type=str, default = "127.0.0.1"      )
    parser.add_argument('--port',     type=int, default = 20004            )
    args = parser.parse_args()
    # log configuration
    config_logger(
        stream  = stdout,
        filemode= 'w',
        #level   = DEBUG, 
        level   = LEVEL, 
        #filename= 'dlt.log', 
        format  = '[%(asctime)s] [%(levelname)-10s] [%(funcName)s] %(message)s')
    # main 
    exit(main(vars(args)))
####################################################################################################################
# -----------------------------------------------------------------------------
# end
# -----------------------------------------------------------------------------
####################################################################################################################  